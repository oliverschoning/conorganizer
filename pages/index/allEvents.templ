package index

import (
	"database/sql"
	"fmt"
	"github.com/Regncon/conorganizer/models"
	"github.com/Regncon/conorganizer/pages/root"
	"log/slog"
)

type EventState struct {
	Events    []models.Event `json:"events"`
	Idx       int            `json:"editingIdx"`
	IsEditing bool           `json:"isEditing"`
}

templ EventsView(state *EventState, db *sql.DB, logger *slog.Logger) {
	{{ events, err := root.GetEvents(db, logger) }}
	<div id="events-container">
		if err != nil {
			<p>Error fetching events: { err.Error() }</p>
			return
		}
		<div class="events-grid">
			@ShowEvents(state, events, db, logger)
		</div>
		<code>
			<pre data-text="ctx.signals.JSON()"></pre>
		</code>
	</div>
}

templ ShowEvents(state *EventState, events []models.Event, db *sql.DB, logger *slog.Logger) {
	{{ fmt.Println("Id: ", state.Idx, state.Idx == -1) }}
	for _, event := range events {
		@root.EventCard(event, state.Idx)
	}
}
